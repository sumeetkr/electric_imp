{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 // Semester Project for Connected Embedded Systems Architecture \'97 Version 0\
// Author: Sumeet Kumar (and WWW )\
// 7-9-2013\
// Agent code\
const TWILIO_ACCOUNT_SID = "AC4d7c929e24aa8af377ae06a19cf2838f"\
const TWILIO_AUTH_TOKEN = "ab6ad4f7c07b0f301ede5d9fcf365284"\
const TWILIO_FROM_NUMBER = "+14088682252" // your phone no goes here\
const TWILIO_TO_NUMBER =   ""//"+16507141200" //"+19092629747" // destination phone no\
const REMOTE_URL = "http://cmu-sds.herokuapp.com/sensor_readings" //"http://cmusds.herokuapp.com//sensor_readings"\
\
 \
function send_sms(number, message) \{\
    local twilio_url = format("https://api.twilio.com/2010-04-01/Accounts/%s/SMS/Messages.json", TWILIO_ACCOUNT_SID);\
    local auth = "Basic " + http.base64encode(TWILIO_ACCOUNT_SID+":"+TWILIO_AUTH_TOKEN);\
    local body = http.urlencode(\{From=TWILIO_FROM_NUMBER, To=number, Body=message\});\
    local req = http.post(twilio_url, \{Authorization=auth\}, body);\
    server.log("sending message: "+body);\
    local res = req.sendsync();\
    if(res.statuscode != 201) \{\
        server.log("error sending message: "+res.body);\
    \}\
\}\
\
\
function onHttpComplete(m)\
\{\
  server.log("status was " + m.statuscode);\
  if (m.statuscode == 200) \{ // "OK"\
    server.log("Proudly using " + m.headers.server);\
  \}\
\}\
\
device.on("sendSMS", function(v) \{\
    send_sms(TWILIO_TO_NUMBER, "Electrimp Imp alert: EARTQUAKE, RUN RUN !!!");\
\});\
\
device.on("postJSON", function (x) \{\
  server.log("request received " + x);\
  \
  http.put(REMOTE_URL,\
    \{ "Content-Type": "application/json" \}, \
    http.jsonencode(x)\
  ).sendasync(onHttpComplete);\
  \
//  server.log("request sent");\
\});\
 \
device.on("getlastReadings", function (x) \{\
    server.log("getting last readings " + x);\
    http.get("http://cmu-sds.herokuapp.com/get_last_reading_time_for_all_devices").sendasync(onHttpComplete);\
\});\
// agent code\
responses <- [];\
http.onrequest(function(req, res) \{\
  responses.push(res);\
  try \{\
   \
  local t = http.jsondecode(req.body);\
  server.log(t);\
  server.log("request from aliens " + req.body);\
  \
    response.send(200, "OK");\
  \} catch (e) \{\
      server.log("error");\
    response.send(500, "Bogus");\
  \}\
  device.send("ping", 1);\
\});\
 \
device.on("pong", function(data) \{\
  foreach(res in responses) \{\
    res.send(200, data);\
  \}\
  responses = [];\
\});\
\
device.on("sendToOpenSense", function(data) \{\
  //server.log("request received for open sense " + data);\
  \
  local dataString = "\{\\"feed_id\\": 37691,\\"value\\":"+ data+ "\}";//"\{feed_id:37691, value:45\}";//\
  //server.log(test);\
  http.post("http://api.sen.se/events/?sense_key=RMSHIf10oCKD22_NINkGsg",\
    \{ "Content-Type": "application/json" \}, \
    dataString//http.jsonencode(dataString)\
  ).sendasync(onHttpComplete);\
  \
  server.log("request sent to open sense");\
\});}